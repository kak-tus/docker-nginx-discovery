{{- range $dc := datacenters true }}
{{- range $services := services ( printf "@%s" $dc ) }}
{{- range $service := service ( printf "%s@%s" $services.Name $dc ) }}
{{- if $service.Tags | contains ( env "NGINX_SERVICES_FILTER" | printf "need-nginx-stream%s"  ) }}
{{- $service_name := $service.Name }}
{{- if not ( scratch.Key ( printf "service_%s_" $service_name ) ) }}

{{- scratch.Set ( printf "service_%s_" $service_name ) "1" }}

upstream {{ $service_name }}-upstream  {
{{- if service $service_name }}
  {{- range $service_local := service $service_name }}
    {{- if gt $service_local.Port 0 }}
      server {{ $service_local.Address }}:{{ $service_local.Port }};
    {{- end }}
  {{- end }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ $service_local.Address }}:{{ $service_local.Port }} backup;
  {{- end }}{{ end }}{{ end }}

{{- else }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ $service_local.Address }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- end }}
}

{{- range $server := ls ( printf "config/%s/nginx/streams" $service_name ) }}

server {

{{- if keyExists ( printf "config/%s/nginx/restrict" $service_name ) }}
{{- range ls "config/home_ips" }}
  allow {{ .Value }};
{{- end }}
  deny all;
{{- end }}

{{ if keyExists ( printf "config/%s/nginx/stream_configs/%s/config" $service_name $server.Value ) }}
{{- key ( printf "config/%s/nginx/stream_configs/%s/config" $service_name $server.Value ) }}
{{- end -}}
}
{{- end }}

{{- end }}{{ end }}{{ end }}{{ end }}{{ end }}
