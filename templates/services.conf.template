proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=nginx_cache:30m inactive=30d max_size=1G;

server {
  listen 80 default_server;
  server_name _;
  return 444;
}

server {
  listen 80;
  server_name fake-server-for-stat.dd;
  location /stat {
    stub_status;
  }
}

{{- define "template_acme" }}
  {{- range $dc := datacenters true }}
    {{- range $s := $dc | printf "nginx-acme@%s" | service }}
      {{- if not ( scratch.Key "acme" ) }}
        {{- scratch.Set "acme" "1" }}
        location /.well-known/acme-challenge/ {
          allow all;
          proxy_set_header Host $host;
          proxy_pass http://{{ $s.Address }}:{{ $s.Port }};
        }
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $template_acme := executeTemplate "template_acme" }}

{{- define "template_access" }}
  {{- range ls "config/home_ips" }}
      allow {{ .Value }};
  {{- end }}
  deny all;
{{- end }}
{{- $template_access := executeTemplate "template_access" }}

{{- range $dc := datacenters true }}
{{- range $services := services ( printf "@%s" $dc ) }}
{{- range $service := service ( printf "%s@%s" $services.Name $dc ) }}
{{- if $service.Tags | contains ( env "NGINX_SERVICES_FILTER" | printf "need-nginx%s" ) }}
{{- $service_name := $service.Name }}
{{- if not ( scratch.Key ( printf "service_%s_" $service_name ) ) }}

{{- scratch.Set ( printf "service_%s_" $service_name ) "1" }}

upstream {{ $service_name }}-upstream  {
{{- if service $service_name }}
  {{- range $service_local := service $service_name }}
    {{- if gt $service_local.Port 0 }}
      server {{ $service_local.Address }}:{{ $service_local.Port }};
    {{- end }}
  {{- end }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ $service_local.Address }}:{{ $service_local.Port }} backup;
  {{- end }}{{ end }}{{ end }}

{{- else }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ if $service_local.Address | printf "config/nginx/map/%s" | keyExists }}
      {{- $service_local.Address | printf "config/nginx/map/%s" | key }}
      {{- else }}{{  $service_local.Address }}
      {{- end }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- end }}
}

upstream {{ $service_name }}-all-upstream  {
{{- if service $service_name }}
  {{- range $service_local := service $service_name }}
    {{- if gt $service_local.Port 0 }}
      server {{ $service_local.Address }}:{{ $service_local.Port }};
    {{- end }}
  {{- end }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ $service_local.Address }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- else }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ if $service_local.Address | printf "config/nginx/map/%s" | keyExists }}
      {{- $service_local.Address | printf "config/nginx/map/%s" | key }}
      {{- else }}{{  $service_local.Address }}
      {{- end }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- end }}
}

upstream {{ $service_name }}-local-upstream  {
{{- if service $service_name }}
  {{- range $service_local := service $service_name }}
    {{- if gt $service_local.Port 0 }}
      server {{ $service_local.Address }}:{{ $service_local.Port }};
    {{- end }}
  {{- end }}

{{- else }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ if $service_local.Address | printf "config/nginx/map/%s" | keyExists }}
      {{- $service_local.Address | printf "config/nginx/map/%s" | key }}
      {{- else }}{{  $service_local.Address }}
      {{- end }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- end }}
}

upstream {{ $service_name }}-remote-upstream  {
{{- if service $service_name }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ $service_local.Address }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- else }}

  {{- range $dc_local := datacenters true }}
  {{- range $service_local := service ( printf "%s@%s" $service_name $dc_local ) }}
  {{- if gt $service_local.Port 0 }}
    server {{ if $service_local.Address | printf "config/nginx/map/%s" | keyExists }}
      {{- $service_local.Address | printf "config/nginx/map/%s" | key }}
      {{- else }}{{  $service_local.Address }}
      {{- end }}:{{ $service_local.Port }};
  {{- end }}{{ end }}{{ end }}

{{- end }}
}

{{- if keyExists ( printf "config/%s/nginx/server_name" $service_name ) }}
{{- $server_name := key ( printf "config/%s/nginx/server_name" $service_name ) }}

server {
  server_name {{ $server_name }};
  listen 80;

  {{- if keyExists ( printf "config/%s/nginx/client_max_body_size" $service_name ) }}
    client_max_body_size {{ key ( printf "config/%s/nginx/client_max_body_size" $service_name ) }};
  {{- end }}

  location / {
    {{- if keyExists ( printf "config/%s/nginx/only_ssl" $service_name ) }}
        return 301 https://{{ $server_name }}$request_uri;
    {{- else }}

      {{- if keyExists ( printf "config/%s/nginx/restrict" $service_name ) }}
        {{ $template_access }}
      {{- end }}

      proxy_set_header Host $host;
      proxy_pass http://{{ $service_name }}-upstream;

    {{- end }}
  }

  {{- $template_acme }}
}

{{- range $cert_host := env "NGINX_VAULT_PATH" | printf "%s/" | secrets }}
{{- if eq $cert_host ( printf "%s/" $server_name ) }}

server {
  server_name {{ $server_name }};
  listen 443 ssl;

  {{- with secret ( printf "%s/%sfullchain" ( env "NGINX_VAULT_PATH" ) $cert_host )}}
  {{- plugin "/usr/local/bin/store.sh" ( printf "/etc/nginx/certificates/%s/fullchain.pem" $server_name ) ( printf "%s" .Data.value ) }}
  {{- end }}

  {{- with secret ( printf "%s/%skey" ( env "NGINX_VAULT_PATH" ) $cert_host )}}
  {{- plugin "/usr/local/bin/store.sh" ( printf "/etc/nginx/certificates/%s/key.pem" $server_name ) ( printf "%s" .Data.value ) }}
  {{- end }}

  {{- with secret ( printf "%s/%sdhparams" ( env "NGINX_VAULT_PATH" ) $cert_host )}}
  {{- plugin "/usr/local/bin/store.sh" ( printf "/etc/nginx/certificates/%s/dhparams.pem" $server_name ) ( printf "%s" .Data.value ) }}
  {{- end }}

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/certificates/{{ $server_name }}/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/{{ $server_name }}/key.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/certificates/{{ $server_name }}/dhparams.pem;
  ssl_session_cache shared:{{ $server_name }}:10m;

{{- if keyExists ( printf "config/%s/nginx/client_max_body_size" $service_name ) }}
  client_max_body_size {{ key ( printf "config/%s/nginx/client_max_body_size" $service_name ) }};
{{- end }}

{{- if keyExists ( printf "config/%s/nginx/restrict" $service_name ) }}
  {{ $template_access }}
{{- end }}

  location / {
    proxy_set_header Host $host;
    proxy_pass http://{{ $service_name }}-upstream;
  }
}
{{- end }}{{ end }}
{{- end }}

{{- range $server_name := ls ( printf "config/%s/nginx/server_names" $service_name ) }}

{{- if or ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name $server_name.Value ) ) ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_http" $service_name $server_name.Value ) ) }}

server {
  listen 80;

{{- if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_http" $service_name $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name_http" $service_name $server_name.Value ) }};
{{- else if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name $server_name.Value ) }};
{{- else }}
  server_name {{ $server_name.Value }};
{{- end }}

{{- if keyExists ( printf "config/%s/nginx/restrict" $service_name ) }}
  {{ $template_access }}
{{- end }}

{{- if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name $server_name.Value ) }}
{{- end }}

{{- if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config_http" $service_name $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config_http" $service_name $server_name.Value ) }}
{{- end }}

  {{- $template_acme }}
}
{{- end }}

{{- if or ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name $server_name.Value ) ) ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_https" $service_name $server_name.Value ) ) }}
{{- range $cert_host := env "NGINX_VAULT_PATH" | printf "%s/" | secrets }}
{{- if eq $cert_host ( printf "%s/" $server_name.Value ) }}

server {
  listen 443 ssl;

{{- if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_https" $service_name $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name_https" $service_name $server_name.Value ) }};
{{- else if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name $server_name.Value ) }};
{{- else }}
  server_name {{ $server_name.Value }};
{{- end }}

  {{- with secret ( printf "%s/%sfullchain" ( env "NGINX_VAULT_PATH" ) $cert_host )}}
  {{- plugin "/usr/local/bin/store.sh" ( printf "/etc/nginx/certificates/%s/fullchain.pem" $server_name.Value ) ( printf "%s" .Data.value ) }}
  {{- end }}

  {{- with secret ( printf "%s/%skey" ( env "NGINX_VAULT_PATH" ) $cert_host )}}
  {{- plugin "/usr/local/bin/store.sh" ( printf "/etc/nginx/certificates/%s/key.pem" $server_name.Value ) ( printf "%s" .Data.value ) }}
  {{- end }}

  {{- with secret ( printf "%s/%sdhparams" ( env "NGINX_VAULT_PATH" ) $cert_host )}}
  {{- plugin "/usr/local/bin/store.sh" ( printf "/etc/nginx/certificates/%s/dhparams.pem" $server_name.Value ) ( printf "%s" .Data.value ) }}
  {{- end }}

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/certificates/{{ $server_name.Value }}/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/{{ $server_name.Value }}/key.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/certificates/{{ $server_name.Value }}/dhparams.pem;
  ssl_session_cache shared:{{ $server_name.Value }}:10m;

{{- if keyExists ( printf "config/%s/nginx/restrict" $service_name ) }}
  {{ $template_access }}
{{- end }}

{{- if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name $server_name.Value ) }}
{{- end }}

{{- if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config_https" $service_name $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config_https" $service_name $server_name.Value ) }}
{{- end }}
}
{{- end }}{{ end }}{{ end }}

{{- end }}

{{- end }}{{ end }}{{ end }}{{ end }}{{ end }}
